{"version":3,"file":"QueryURL.es.min.js","sources":["../src/QueryURL.es.js"],"sourcesContent":["const defaults = {\n    queries : [],\n    alias : {},\n    ignore : [],\n\n    prefix : \"\",\n\n    types : {\n    } \n};\n\nconst __typeCast = function( str, type ){\n\n    if ( type === \"integer\") {\n        return parseInt( str );\n    }\n\n    if ( type === \"number\") {\n        return parseFloat( str );\n    }\n\n    if ( type === \"plainJSON\" ) {\n        return str;\n    }\n\n    return str;\n};\n\nconst QueryURL = function( urlStr, opts ) {\n\n    if ( typeof urlStr === \"string\") {\n        this.url = new URL( urlStr );\n        \n    } else {\n        this.url = new URL( document.location.href );\n        opts = urlStr;\n    }\n\n    if ( !opts ) return;\n\n    this.options = Object.assign( {}, defaults );\n\n    if ( typeof opts.queries === \"object\" ) {\n        this.options.queries = opts.queries;\n    }\n    if ( typeof opts.alias === \"object\" ) {\n        this.options.alias = opts.alias;\n    }\n    if ( typeof opts.prefix === \"string\" ) {\n        this.options.prefix = opts.prefix;\n    }\n    if ( typeof opts.types === \"object\" ) {\n        this.options.types = opts.types;\n    }\n    if ( typeof opts.ignore === \"object\" ) {\n        this.options.ignore = opts.ignore;\n    }\n};\n\nQueryURL.prototype = Object.assign( Object.create( QueryURL.prototype ), {\n\n    setQueries : function( queries ) {\n        this.options.queries = queries;\n    },\n\n    setType : function( param, type ){\n\n    },\n\n    setPrefix : function( pref ){\n        if ( typeof pref === \"string\" ) {\n            this.options.prefix = pref;\n        }\n    },\n\n    addQuery : function(){\n\n    },\n\n    addAlias : function( param, alias) {\n\n        if ( !this.options.alias[param] ) {\n            this.options.alias[param] = [];\n        }\n        if ( typeof alias === \"string\" ) {\n            this.options.alias[param].push( alias );\n        }\n\n    },\n\n    getAll : function( ) {\n        \n        let ret = {};\n\n        let qry, val;\n\n        for ( let i = 0; i < this.options.queries.length; i++ ) {\n            qry = this.options.queries[i];\n            val = this.getQuery( qry );\n            if ( val ) {\n                ret[ qry ] = val;\n            }\n        }\n\n        return ret;\n    },\n\n    getQuery : function( qry ) {\n        let params = this.url.searchParams;\n\n\n        if ( typeof qry !== \"string\" ) {\n            console.error( \"Failed execute 'getQuery': 1 argument type of 'string' required\" );\n            return null;\n        }\n\n        let alias = this.options.alias[qry];\n        if ( alias ) {\n\n            let res = null;\n            for ( let i = 0; i < alias.length; i++ ) {\n                \n                if( this.options.ignore.indexOf( alias[i] ) < 0 && params.has( alias[i] ) ) { \n                    res =  params.getAll( alias[i] );\n                    break;\n                    \n                }\n            }\n            if (res) return this._parse( qry, res ); \n            return res;\n        }\n\n        if ( this.options.ignore.indexOf( this.options.prefix + qry ) < 0 && params.has( this.options.prefix + qry) ) {          \n            return this._parse( qry, params.getAll( this.options.prefix + qry ) ); \n        }\n        \n        if( this.options.ignore.indexOf( qry ) < 0 && params.has( qry ) ) {             \n            return this._parse( qry, params.getAll( qry ) ); \n        }\n\n        return null;\n    },\n\n    _parse : function( qry, res ) {\n\n        if( res.length === 1) {\n            res = res[0];\n\n            if ( this.options.types[ qry ] )\n            {\n                return __typeCast( res, this.options.types[ qry ] );\n            }\n\n        } else {\n\n            if ( this.options.types[ qry ] )\n            {\n                for ( let i = 0; i < res.length; i++ ) {\n                    res[i] = __typeCast( res, this.options.types[ qry ] )\n                }\n            }\n            \n        }\n\n        return res;\n    }\n});\n\nexport default QueryURL;\nexport { QueryURL };"],"names":["defaults","queries","alias","ignore","prefix","types","__typeCast","str","type","parseInt","parseFloat","QueryURL","urlStr","opts","this","url","URL","document","location","href","options","Object","assign","prototype","create","setQueries","setType","param","setPrefix","pref","addQuery","addAlias","push","getAll","qry","val","ret","i","length","getQuery","params","searchParams","console","error","res","indexOf","has","_parse"],"mappings":"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"}